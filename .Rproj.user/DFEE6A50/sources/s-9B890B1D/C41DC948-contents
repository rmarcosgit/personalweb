library(dplyr)
library(tidyr)
library(reshape2)
library(ggplot2)
library(dunn.test)

#Funcion para normalizar de 0-1
normalit<-function(m){
  (m - min(m))/(max(m)-min(m))
}

setwd('E:/SERGISAT/')

datos <- read.delim2('datos_parcelas.txt')

#Crear codigo incendio y situacion
datos <- datos %>% 
  mutate(incendio = substr(ID_PAR,1,1)) %>%
  mutate(situacion = substr(COD_PAR,3,6))

#Listado de especies en regenerado
esp <- c('PH','PN','PP','PS','QF','QI')

getEsp <- function(x,c1,c2,d,e){
 return(e[which.max(d[x,c1:c2])]) 
}

#getEsp(1,75,80,datos,esp)
datos$ESP5 <- unlist(lapply(row.names(datos), function(x) getEsp(x,75,80,datos,esp)))
datos$ESP4 <- unlist(lapply(row.names(datos), function(x) getEsp(x,69,74,datos,esp)))

datos$REG <- paste(datos$ESP5,datos$ESP4,sep='-')


#Transformar a long
datos.long <- melt(datos[,-c(1,3:7,9:14,42,43,48:ncol(datos)-5,ncol(datos)-2,ncol(datos)-1)], 
                   id = c("COD_PAR","incendio","situacion",
                          "Tipo.parcela","VEG", "REG",
                          "MC","CBI","Sev"))

datos.long.n <- datos.long %>%
  group_by(variable) %>%
  mutate_each(funs(normalit), value)

datos.long %>%
  filter(situacion != 'OP2S') %>%
  filter(variable =='Bio') %>%
  ggplot( aes(x = factor(Sev), y = value, 
              group = factor(Sev), 
              fill = factor(Sev))) +
  geom_boxplot(outlier.size = 0.4) +
  facet_grid(VEG ~ REG) +
  scale_fill_brewer(name='Severidad',palette = 'YlOrRd') +
  labs(y='',x='') +
  theme_bw() +
  theme(legend.position = 'bottom',
        axis.text.x=element_blank(),
        axis.ticks.x=element_blank())

datos.long.n %>%
  filter(situacion != 'OP2S') %>%
  ggplot( aes(x = factor(Sev), y = value, 
                                group = factor(Sev), 
                                fill = factor(Sev))) +
  geom_boxplot(outlier.size = 0.4) +
  facet_grid(situacion ~ variable) +
  scale_fill_brewer(name='Severidad',palette = 'YlOrRd') +
  labs(y='',x='') +
  theme_bw() +
  theme(legend.position = 'bottom',
        axis.text.x=element_blank(),
        axis.ticks.x=element_blank())


datos.long.n %>%
  filter(situacion != 'OP2S' & VEG != 'FS') %>%
  ggplot( aes(x = factor(Sev), y = value, 
              group = factor(Sev), 
              fill = factor(Sev))) +
  geom_boxplot(outlier.size = 0.4) +
  facet_grid(VEG ~ variable) +
  scale_fill_brewer(name='Severidad',palette = 'YlOrRd') +
  labs(y='',x='') +
  theme_bw() +
  theme(legend.position = 'bottom',
        axis.text.x=element_blank(),
        axis.ticks.x=element_blank())

#Comparacion control/quemado por incendio
for(var in unique(datos.long$variable)){
  
  dt <- datos.long %>%
      #group_by(incendio) %>%
      filter(variable == var) %>%
      summarise(dt = dunn.test(value,
                               Sev, method = 'bh'))
  
  print('--------------------------------------')
  print(var)
  #print(dt$dt)
  print('--------------------------------------')
  
}


#Transformar a long
datos.long.div <- melt(datos[,-c(1,3:7,9:14,18:22,24:40,42,43,56:ncol(datos)-5,ncol(datos)-2,ncol(datos)-1)], 
                   id = c("COD_PAR","incendio","situacion",
                          "Tipo.parcela","VEG","REG",
                          "MC","CBI","Sev"))

datos.long.div %>%
  group_by(variable) %>%
  mutate_each(funs(normalit), value) %>%
  filter(situacion != 'OP2S' & VEG != 'FS') %>%
  ggplot( aes(x = factor(Sev), y = value, 
              group = factor(Sev), 
              fill = factor(Sev))) +
  geom_boxplot(outlier.size = 0.4) +
  facet_grid(VEG ~ variable) +
  scale_y_continuous(limits = c(0,1)) +
  scale_fill_brewer(name='Severidad',palette = 'YlOrRd') +
  labs(y='',x='') +
  theme_bw() +
  theme(legend.position = 'bottom',
        axis.text.x=element_blank(),
        axis.ticks.x=element_blank())

datos.long.div %>%
  group_by(variable) %>%
  mutate_each(funs(normalit), value) %>%
  filter(situacion != 'OP2S') %>%
  ggplot( aes(x = factor(Sev), y = value, 
              group = factor(Sev), 
              fill = factor(Sev))) +
  geom_boxplot(outlier.size = 0.4) +
  facet_grid(situacion ~ variable) +
  scale_y_continuous(limits = c(0,1)) +
  scale_fill_brewer(name='Severidad',palette = 'YlOrRd') +
  labs(y='',x='') +
  theme_bw() +
  theme(legend.position = 'bottom',
        axis.text.x=element_blank(),
        axis.ticks.x=element_blank())

datos.long.cov <- melt(datos[,-c(1,3:7,9:14,18:22,36:ncol(datos)-2)], 
                       id = c("COD_PAR","incendio","situacion",
                              "Tipo.parcela","VEG",
                              "MC","CBI","Sev"))

datos.long.cov %>%
  group_by(variable) %>%
  mutate_each(funs(normalit), value) %>%
  filter(situacion != 'OP2S') %>%
  ggplot( aes(x = factor(Sev), y = value, 
              group = factor(Sev), 
              fill = factor(Sev))) +
  geom_boxplot(outlier.size = 0.4) +
  facet_grid(situacion ~ variable) +
  scale_y_continuous(limits = c(0,1)) +
  scale_fill_brewer(name='Severidad',palette = 'YlOrRd') +
  labs(y='',x='') +
  theme_bw() +
  theme(legend.position = 'bottom',
        axis.text.x=element_blank(),
        axis.ticks.x=element_blank())

datos.long.cov %>%
  group_by(variable) %>%
  #mutate_each(funs(normalit), value) %>%
  filter(situacion != 'OP2S') %>%
  ggplot( aes(x = factor(Sev), y = value, 
              group = factor(Sev), 
              fill = factor(Sev))) +
  geom_boxplot(outlier.size = 0.4) +
  facet_grid(VEG ~ variable) +
  #scale_y_continuous(limits = c(0,1)) +
  scale_fill_brewer(name='Severidad',palette = 'YlOrRd') +
  labs(y='',x='') +
  theme_bw() +
  theme(legend.position = 'bottom',
        axis.text.x=element_blank(),
        axis.ticks.x=element_blank())


datos.long.estr <- melt(datos[,-c(1,3:7,9:14,24,25:36,43:ncol(datos)-2)], 
                       id = c("COD_PAR","incendio","situacion",
                              "Tipo.parcela","VEG",
                              "MC","CBI","Sev"))

datos.long.estr %>%
  group_by(variable) %>%
  mutate_each(funs(normalit), value) %>%
  filter(situacion != 'OP2S') %>%
  ggplot( aes(x = factor(Sev), y = value, 
              group = factor(Sev), 
              fill = factor(Sev))) +
  geom_boxplot(outlier.size = 0.4) +
  facet_grid(situacion ~ variable) +
  scale_y_continuous(limits = c(0,1)) +
  scale_fill_brewer(name='Severidad',palette = 'YlOrRd') +
  labs(y='',x='') +
  theme_bw() +
  theme(legend.position = 'bottom',
        axis.text.x=element_blank(),
        axis.ticks.x=element_blank())

########################
################## COMPARACION ##########################
tipo <- unique(datos$situacion)
inc <- unique(datos$incendio)
variables <- "PC1" #c("Bio_arb","Bio_mat","MO","N_ESP","LHDI","H_avg","EST_5","EST_4")
datos$PC1 <- normalit(pca$x[,1])+0.0000001

for(v in variables){
  #v <- "Bio"
  iter <- 1
  
  comparacion <- list()
  
  for(t in tipo){
    for(i in inc){
      
      c <- filter(datos, situacion == t & datos$incendio == i & Tipo.parcela == 'Control')
      q <- filter(datos, situacion == t & datos$incendio == i & Tipo.parcela == 'Quemado')
      
      for(j in 1:nrow(q)){
        for(n in 1:nrow(c)){
        
            df <- data.frame(as.character(q[j,]$COD_PAR),
                                       t,i,
                                       as.numeric(q[j,]$Sev),
                                       as.character(q[j,]$VEG),
                                       as.character(q[j,]$REG),
                                       as.character(q[j,]$ID_PAR),
                                       as.character(c[n,]$ID_PAR),
                                       as.numeric(round(q[j,which(names(datos) %in% v),]/c[n,which(names(datos) %in% v),],2)))
          
           names(df) <- c('COD_PAR','situacion','incendio','Sev','VEG','REG',
                         'ID_quemado','ID_control','value')  
           
           comparacion[[iter]] <- df
          
          iter <- iter + 1
        }
      }
    } 
    
  }
  
  ymax <- 2
  
  comparacion <- as.data.frame(do.call(rbind,comparacion))
  names(comparacion) <- c('COD_PAR','situacion','incendio','Sev','VEG', 'REG',
                          'ID_quemado','ID_control','value')  
  write.csv2(comparacion,paste('comparacion_',v,'.csv',sep = ''),
             row.names = FALSE)
  
  # plot.vegetacion <- comparacion %>%
  #   filter(VEG != 'FS') %>%
  #   ggplot(aes(x = factor(Sev), y = value, group=factor(Sev),
  #              fill = factor(Sev), color = factor(Sev))) +
  #   geom_violin(alpha=0.7) +
  #   geom_boxplot(width = 0.2, color = 'gray30', fill='white') +
  #   facet_grid(situacion~VEG) +
  #   geom_hline(yintercept = 1, lty=2) +
  #   labs(y='Ratio quemado/control',x='') +
  #   scale_y_continuous(limits = c(0,ymax))+
  #   scale_fill_brewer(name = 'Severidad',palette = 'YlOrRd')+
  #   scale_color_brewer(name = 'Severidad',palette = 'YlOrRd')+
  #   theme_bw()
  # 
  # ggsave(filename = paste('plots/ratio_vegetacion_',v,'.png',sep = ''),
  #        plot.vegetacion,
  #        width = 7,
  #        height = 6)
  # 
  # plot.incendio <- comparacion %>%
  #   filter(VEG != 'FS') %>%
  #   ggplot(aes(x = factor(Sev), y = value, group=factor(Sev),
  #              fill = factor(Sev), color = factor(Sev))) +
  #   geom_violin(alpha=0.7) +
  #   geom_boxplot(width = 0.2, color = 'gray30', fill='white') +
  #   facet_grid(situacion~incendio) +
  #   geom_hline(yintercept = 1, lty=2) +
  #   labs(y='Ratio quemado/control',x='') +
  #   scale_y_continuous(limits = c(0,ymax))+
  #   scale_fill_brewer(name = 'Severidad',palette = 'YlOrRd')+
  #   scale_color_brewer(name = 'Severidad',palette = 'YlOrRd')+
  #   theme_bw()
  # 
  # ggsave(filename = paste('plots/ratio_incendio_',v,'.png',sep = ''),
  #        plot.incendio,
  #        width = 7,
  #        height = 6)
  # 
  # plot.regenerado <- comparacion %>%
  #   filter(VEG != 'FS') %>%
  #   ggplot(aes(x = factor(Sev), y = value, group=factor(Sev),
  #              fill = factor(Sev), color = factor(Sev))) +
  #   geom_violin(alpha=0.7) +
  #   geom_boxplot(width = 0.2, color = 'gray30', fill='white') +
  #   facet_grid(situacion~REG) +
  #   geom_hline(yintercept = 1, lty=2) +
  #   labs(y='Ratio quemado/control',x='') +
  #   scale_y_continuous(limits = c(0,ymax))+
  #   scale_fill_brewer(name = 'Severidad',palette = 'YlOrRd')+
  #   scale_color_brewer(name = 'Severidad',palette = 'YlOrRd')+
  #   theme_bw()
  # 
  # ggsave(filename = paste('plots/ratio_regenerado_',v,'.png',sep = ''),
  #        plot.regenerado,
  #        width = 12,
  #        height = 6)
  # 
}

##################### PCA #######################
datos.pca <- datos[,-c(1,3:7,9:14,42,43,48:ncol(datos)-5,ncol(datos)-2,ncol(datos)-1)]
M <- cor(datos.pca[,c(7:9,12:17,25:29)])
res1 <- cor.mtest(datos.pca[,c(7:9,12:17,25:29)], conf.level = .95)

library(corrplot)
library(RColorBrewer)

col <- colorRampPalette(rev(c("#BB4444", "#EE9988", "#FFFFFF", "#77AADD", "#4477AA")))

png('E:/SERGISAT/plots/c.plot.png',height=1200, width=1200, pointsize=25)
corrplot(M,p.mat = res1$p, method = "color", col = col(200),
                   type = "upper", order = "AOE", number.cex = .7,
                   addCoef.col = "black", # Add coefficient of correlation
                   tl.col = "black", tl.srt = 90, # Text label color and rotation
                   # Combine with significance
                   sig.level = 0.05, insig = "blank", 
                   # hide correlation coefficient on the principal diagonal
                   diag = FALSE)
dev.off()

#Reescalado de datos para PCA "subtracting the mean and dividing by the sd"
datos.pca.m <- scale(datos.pca[,c(7:9,12:17,25:29)])
pca <- prcomp(datos.pca.m)
summary(pca)

r<-as.data.frame(pca$rotation[,1:5]*-1)
names(r) <- c("PC1-Arbolado","PC2-Arborescente","PC3-Matorral", "PC4-Materia organica", "PC5-Herbaceas")
r$vars <- row.names(r)

values <- melt(r)

pca.plot <- ggplot(data=values, aes(x=vars, y = value, fill=variable)) +
  geom_bar(stat = 'identity')+ 
  facet_wrap(~variable)+
  labs(x='',y='')+
  scale_fill_discrete(name='')+
  #geom_hline(yintercept = 0, lty=1) +
  coord_polar() +
  theme_light()+
  theme(legend.position = 'bottom',
        panel.grid.major = element_blank(),
        panel.grid.minor = element_blank(),
        axis.text.x = element_text(size = 7),
        axis.text.y = element_blank(),
        axis.ticks = element_blank())
pca.plot
ggsave('E:/SERGISAT/plots/pca.png',pca.plot,width = 10,height = 8,dpi=600)

library(NbClust)
datos.cluster <- pca$x[,1:5]*-1
clusters <- NbClust(datos.cluster,distance = 'euclidean', method = 'ward.D2', min.nc = 2, max.nc = 12)

datos.cluster <- as.data.frame(datos.cluster)
datos.cluster$Cluster <- as.character(clusters$Best.partition)

datos.cluster$Cluster <- recode(datos.cluster$Cluster, '1' = "Arbolado", '2' = "Arborescente", '3' = "Matorral/herbazal")
datos.cluster.plot <- melt(datos.cluster,id='Cluster')

cluster.plot <- ggplot(data=datos.cluster.plot, aes(x=variable, y = value, 
                                    fill=factor(variable),color=factor(variable))) +
  geom_violin(alpha=0.7)+ 
  geom_boxplot(width = 0.3, fill='white') +
  facet_wrap(~Cluster)+
  geom_hline(yintercept = 0, lty=2) +
  scale_fill_discrete(name='')+
  scale_color_discrete(name='')+
  labs(x='',y='')+
  coord_polar() +
  theme_light()+
  theme(legend.position = 'bottom',
        panel.grid.major = element_blank(),
        panel.grid.minor = element_blank(),
        axis.text.y = element_blank(),
        axis.ticks = element_blank())
cluster.plot
ggsave('E:/SERGISAT/plots/cluster.png',cluster.plot,width = 6,height = 3.5,dpi=600)

datos.cluster <- cbind(datos.cluster,datos.pca[,c(1,2,3,31,32)])
cluster.count <- aggregate(COD_PAR~Cluster+Sev+situacion, datos.cluster, FUN=length )
situacion.count <- aggregate(COD_PAR~Sev, datos.cluster, FUN=length )

parcelas <- ggplot(data = cluster.count, aes(x=factor(Cluster), y = COD_PAR,
                                 group = factor(Sev), fill=factor(Sev))) +
  geom_bar(stat = 'identity', position = 'stack', width = 0.5) +
  scale_fill_brewer(name='Severidad',palette = 'YlOrRd')+
  scale_y_continuous(expand = c(0,0))+
  labs(y='N? de parcelas', x='')+
  #facet_grid(REG~VEG)+
  facet_wrap(~situacion) +
  theme_light()+
  theme(legend.position = 'bottom',
        panel.grid.major.x = element_blank(),
        panel.grid.minor = element_blank(),
        axis.text.x = element_text(angle = 90,hjust = 1),
        panel.grid.major.y = element_line(linetype = 2))

parcelas  
# ggsave('E:/SERGISAT/plots/parcelas_pend_ori.png',parcelas,width = 6.5,height = 5.5,dpi=600)
ggsave('E:/SERGISAT/plots/parcelas_3.png',parcelas,width = 6.5,height = 12,dpi=600)

cluster.count$Cod <- paste('S',cluster.count$Sev,sep='')
situacion.count$Cod <- paste('S',situacion.count$Sev,sep='')

cluster.count.prop <- merge(cluster.count,situacion.count,'Cod')
cluster.count.prop$Percent <- round(cluster.count.prop$COD_PAR.x/cluster.count.prop$COD_PAR.y,3) * 100


regenerado <- ggplot(data = cluster.count.prop, aes(x=factor(Cluster), y = Percent,
                                 group = factor(Sev.x), fill=factor(Sev.x))) +
  geom_bar(stat = 'identity', position = 'stack', width = 0.5) +
  scale_fill_brewer(name='Severidad',palette = 'YlOrRd')+
  scale_y_continuous(expand = c(0,0))+
  labs(y='Porcentaje en la categoria', x='')+
  facet_wrap(~situacion)+
  theme_light()+
  theme(legend.position = 'bottom',
        panel.grid.major.x = element_blank(),
        panel.grid.minor = element_blank(),
        axis.text.x = element_text(angle = 90,hjust = 1),
        panel.grid.major.y = element_line(linetype = 2))
regenerado
ggsave('E:/SERGISAT/plots/cluster_severidad.png',regenerado,width = 8,height = 5,dpi=600)

#Parcelas quemadas en cluster 1
filter(datos.cluster, Cluster %in% c('Arbolado','Matorral/herbazal') & Sev !=0)


################### MODELOS ##########################
library(raster)
library(sp)
library(DescTools)

#Reconversion de ETRS89 a WGS84
datos.pt.30 <- datos %>%
  filter(incendio != 'M')

names(datos.pt.30)[3:4] <- c('x','y')
coordinates(datos.pt.30) <- ~x+y
crs(datos.pt.30) <- '+proj=utm +zone=30 +ellps=GRS80 +units=m +no_defs '
plot(datos.pt.30)

datos.pt.31 <- datos %>%
  filter(incendio == 'M')

names(datos.pt.31)[3:4] <- c('x','y')
coordinates(datos.pt.31) <- ~x+y
crs(datos.pt.31) <- '+proj=utm +zone=31 +ellps=GRS80 +units=m +no_defs '
plot(datos.pt.31)
datos.pt.31 <- spTransform(datos.pt.31, CRSobj = crs(datos.pt.30))

datos.pt <- rbind(datos.pt.30,datos.pt.31)
plot(datos.pt)
datos.pt <- spTransform(datos.pt, CRSobj = '+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs ')

temp <- raster('E:/SERGISAT/ascFiles/tasmax/Spain02_v5.0_clim_010reg_aa3d_tasmax.asc')
prec <- raster('E:/SERGISAT/ascFiles/pr/Spain02_v5.0_clim_010reg_aa3d_pr.asc')
crs(temp) <- '+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs' 
crs(prec) <- '+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs' 

spei12 <- brick('E:/Articulo_spei_large_fires/Data/spei12.nc')
spei12.07.1994 <- spei12[[which(names(spei12) %like any% '%1994.07%')[1]]]
crs(spei12.07.1994) <- crs(datos.pt.30)
spei12.07.1994 <- projectRaster(spei12.07.1994,crs = crs(prec))

spei24 <- brick('E:/Articulo_spei_large_fires/Data/spei24.nc')
spei24.07.1994 <- spei24[[which(names(spei24) %like any% '%1994.07%')[1]]]
crs(spei24.07.1994) <- crs(datos.pt.30)
spei24.07.1994 <- projectRaster(spei24.07.1994,crs = crs(prec))

# 
# extract(temp,datos.pt@coords)
# extract(prec,datos.pt@coords)
# extract(spei12.07.1994,datos.pt@coords)
# extract(spei24.07.1994,datos.pt@coords)

# pca$x[,1]
# 
# files <- list.files('E:/Gross_Final_1km_EU27CH_TIFF/',pattern = '.tif$',full.names = T)
# 
# tforest <- list()
# iter <- 1
# 
# for(f in files){
#   r <- raster(f)
#   r[r!=333 & r!=444] <- NA
#   r[r==333 | r ==444] <- as.numeric(substr(f,nchar(f)-7,nchar(f)-4))
#   pts <- spTransform(datos.pt,crs(r))
#   tforest[[iter]] <- raster::extract(r,pts@coords)
#   iter <- iter + 1
# }
# 
# tforest.df <- as.data.frame(do.call(cbind,tforest))
# tforest.df[is.na(tforest.df)] <- 9999
# apply(tforest.df, 1, min)

datos.mod <- as.data.frame(cbind(
                   pca$x[,1],
                   raster::extract(temp,datos.pt@coords),
                   raster::extract(prec,datos.pt@coords),
                   raster::extract(spei12.07.1994,datos.pt@coords),
                   raster::extract(spei24.07.1994,datos.pt@coords),
                   datos$Slo_lidar,
                   datos$Asp_lidar)
              )

names(datos.mod) <- c('R','T','P','SPEI12','SPEI24','S','A')
datos.mod$COD_PAR <- as.character(datos$COD_PAR)

datos.train <- sample_frac(datos.mod, 0.7)
datos.test <- datos.mod[!rownames(datos.mod) %in% rownames(datos.train),]

library(mgcv)

mod.gam <- mgcv::gam(R~s(T)+s(P)+s(SPEI12)+S, data = datos.train)
summary(mod.gam)
# plot(mod.gam)

cor(predict(mod.gam,datos.train),datos.train$R)^2
cor(predict(mod.gam,datos.test),datos.test$R)^2

library(randomForest)

mod.rf <- randomForest(R~T+P+SPEI12+A+S,data = datos.train, ntree=1000,
                       do.trace=200, mtry= 1,importance=TRUE)
# varImpPlot(mod.rf)
cor(predict(mod.rf,datos.train),datos.train$R)^2
cor(predict(mod.rf,datos.test),datos.test$R)^2

library(e1071)

mod.svm <- svm(R~T+P+SPEI12+A+S,data = datos.train)
cor(predict(mod.svm,datos.train),datos.train$R)^2
cor(predict(mod.svm,datos.test),datos.test$R)^2

#############################

datos.comp <- na.omit(read.csv2('E:/SERGISAT/comparacion_EST_5.csv'))
datos.comp <- merge(datos.comp,datos.mod,'COD_PAR')

R.train <- list()
R.test <- list()

for(i in 1:100){
  datos.train <- sample_frac(datos.comp, 0.6)
  datos.test <- datos.comp[!rownames(datos.comp) %in% rownames(datos.train),]
  
  mod.rf <- randomForest(value~T+P+SPEI12+A+S,data = datos.train, ntree=1000,
                         mtry= 1,importance=TRUE)
  # varImpPlot(mod.rf)
  R.train[[i]] <- cor(predict(mod.rf,datos.train),datos.train$value)^2
  R.test[[i]] <- cor(predict(mod.rf,datos.test),datos.test$value)^2
  
}

library(plotmo)
plotmo(mod.rf, ylim = c(0,3))

mean(unlist(R.train))
mean(unlist(R.test))

Rs <- as.data.frame(cbind(
  unlist(R.train),
  unlist(R.test)
))
names(Rs) <- c('Train','Test')
Rs <- melt(Rs)

mu <- Rs %>%
  group_by(variable) %>%
  summarise(grp.mean=mean(value))

ggplot(data=Rs, aes(x=value,color=variable))+
  geom_histogram(fill='white',position = 'identity',bins = 100)+
  geom_vline(data=mu, aes(xintercept=grp.mean, color=variable),
             linetype="dashed")+
  scale_color_brewer(name='',palette="Dark2")+
  labs(y='',x=expression(paste("R"^2)))+
  theme_bw() +
  theme(legend.position = 'top')
  
####################
datos.class <- datos.cluster#filter(datos.cluster, Cluster %in% c('Arbolado','Matorral/herbazal') & Sev !=0)
datos.class <- merge(datos.class,datos.mod,'COD_PAR')
datos.class$REG <- as.factor(datos.class$REG)

library(fmsb)

Accuracy <- list()
Kappa <- list()
Tables <- list()

for(i in 1:1000){
  datos.train <- sample_frac(datos.class, 0.6)
  datos.test <- datos.class[!rownames(datos.class) %in% rownames(datos.train),]
  
  mod.rf <- randomForest(factor(Cluster) ~ T+P+SPEI12+S+A+Sev, 
                         data = datos.train)
  
  fit.table <- table(datos.test$Cluster,predict(mod.rf,datos.test))
  
  Accuracy[[i]] <- sum(diag(fit.table))/sum(fit.table)
  Kappa[[i]] <- Kappa.test(fit.table)[[1]]$estimate
  Tables[[i]] <- fit.table
  
}

Reduce('+', Tables)
mean(unlist(Accuracy))
mean(unlist(Kappa))

val <- as.data.frame(cbind(
  unlist(Accuracy),
  unlist(Kappa)
))
names(val) <- c('Accuracy','Kappa')
val <- melt(val)

mu <- val %>%
  group_by(variable) %>%
  summarise(grp.mean=mean(value))

ggplot(data=val, aes(x=value,color=variable))+
  geom_histogram(fill='white',position = 'identity',bins = 30)+
  geom_vline(data=mu, aes(xintercept=grp.mean, color=variable),
             linetype="dashed")+
  scale_color_brewer(name='',palette="Dark2")+
  labs(y='',x='')+
  theme_bw() +
  theme(legend.position = 'top')


library(pROC)
datos.class <- filter(datos.cluster, Cluster %in% c('Arbolado','Matorral/herbazal') & Sev !=0)
datos.class <- merge(datos.class,datos.mod,'COD_PAR')
datos.class$Recuperado <- ifelse(datos.class$Cluster == 'Arbolado',1,0)
datos.class$REG <- as.factor(datos.class$REG)

auc <- list()
mods.rf <- list()

for(i in 1:1000){
  datos.train <- sample_frac(datos.class, 0.6)
  datos.test <- datos.class[!rownames(datos.class) %in% rownames(datos.train),]
  
  mod.rf <- randomForest(Recuperado ~ T+P+SPEI24+A+Sev, 
                         data = datos.train, importance= TRUE,mtry=2)
  
  roc_obj  <- roc(datos.test$Recuperado,predict(mod.rf,datos.test))
  
  mods.rf[[i]] <- mod.rf
  auc[[i]] <- auc(roc_obj)
  
}

# varImpPlot(mod.rf)
# plotmo(mod.rf,
#        degree1 = "REG",
#        degree2=FALSE)

mean(unlist(auc))
auc.df <- as.data.frame(unlist(auc))
names(auc.df) <- 'AUC'

auc.plot <- ggplot(auc.df, aes(x=AUC)) + geom_histogram(color="gray15", fill="lightgrey") + 
  geom_vline(xintercept = mean(auc.df$AUC), color = "red", lty = 1) +
  geom_vline(xintercept = mean(auc.df$AUC) + sd(auc.df$AUC), color = "red", lty = 2) +
  geom_vline(xintercept = mean(auc.df$AUC) - sd(auc.df$AUC), color = "red", lty = 2) +
  ylab("Counts") +
  theme_minimal() +
  theme(legend.position = "bottom",
        panel.border = element_rect(colour = "black", fill=NA, size=1))

ggsave('E:/SERGISAT/plots/auc_RF.png',auc.plot,width = 5,height = 3)

mod.rf.final <- do.call(randomForest::combine,mods.rf)
varImpPlot(mod.rf.final)
plotmo(mod.rf.final)
